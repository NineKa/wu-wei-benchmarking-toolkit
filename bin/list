#!/usr/bin/env node
var path = require('path')
var config = require(path.join(__dirname, '../lib/config.js'))
var nopt = require('nopt')
var noptUsage = require('nopt-usage')
var fs = require('fs')
var knownOpts = {
  'output-config': Boolean,
  'root': String,
  'help': Boolean
}
var shortHands = {
  'h': ['--help'],
  'o': ['--output-config'],
  'r': ['--root']
}
var description = {
  'help': 'Display this help',
  'output-config': 'Output the JSON configuration on the standard output',
  'root': 'Benchmark suite root'
}
var parsed = nopt(knownOpts, shortHands, process.argv, 2)

if (parsed.help) {
  var usage = noptUsage(knownOpts, shortHands, description)
  var executableName = path.basename(process.argv[1])
  console.log('Usage: ' + executableName + ' [options]')
  console.log(usage)
  process.exit(1)
}

if (!parsed.root) {
  console.log('fatal: No benchmarking suite root directory provided')
  process.exit(1)
}

var setupPath = path.join(parsed.root, '.wu', 'setup.json')

try {
  if (fs.statSync(setupPath).isFile()) {
    var setup = JSON.parse(fs.readFileSync(setupPath))
  } else {
    console.log("'setup.json' not found: create a setup.json file in the .wu directory with the current platform")
    process.exit(1)
  }
} catch (e) {
  console.log(setupPath + ' not found, aborting')
  process.exit(1)
}

// Convert to absolute path if the path is relative
var dirRoot = path.resolve(process.cwd(), parsed.root)
config.config(dirRoot, function (err, config) {
  if (err) {
    console.log(JSON.stringify(err, null, '  '))
    process.exit(1)
  }

  if (parsed['output-config']) {
    console.log(JSON.stringify(config, null, '  '))
  } else {
    console.log('Current platform: ' + setup['platform'])
    console.log('Available experiments: ' + config['experiment-list'])
    console.log('Available benchmarks: ' + config['benchmark-list'])
    console.log('Available implementations: ' + config['implementation-list'])
    console.log('Available compilers: ' + config['compiler-list'])
    console.log('Available environments: ' + config['environment-list'])
    console.log("Add '-h' for possible options")
  }
  process.exit(0)
})
